# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def load_csvmesh(filename=None,printflag=None,*args,**kwargs):
    varargin = load_csvmesh.varargin
    nargin = load_csvmesh.nargin

    basefilename=strcat(cat(filename,'_basedata','.csv'))
    nodesfilename=strcat(cat(filename,'_nodedata','.csv'))
    linesfilename=strcat(cat(filename,'_linedata','.csv'))
    edgesfilename=strcat(cat(filename,'_edgedata','.csv'))
    facesfilename=strcat(cat(filename,'_facedata','.csv'))
    cellsfilename=strcat(cat(filename,'_celldata','.csv'))
    R=0
    C=0
    R2=17 - 1
    C2=0
    RNG=matlabarray(cat(R,C,R2,C2))
    basedata=csvread(basefilename,R,C,RNG)
    mesh.D = copy(basedata[1])
    mesh.dim1min = copy(basedata[2])
    mesh.dim1max = copy(basedata[3])
    mesh.Ndim1 = copy(basedata[4])
    mesh.dim2min = copy(basedata[5])
    mesh.dim2max = copy(basedata[6])
    mesh.Ndim2 = copy(basedata[7])
    mesh.dim3min = copy(basedata[8])
    mesh.dim3max = copy(basedata[9])
    mesh.Ndim3 = copy(basedata[10])
    mesh.Nlinesdim1 = copy(basedata[11])
    mesh.Nlinesdim2 = copy(basedata[12])
    mesh.Nlinesdim3 = copy(basedata[13])
    mesh.totN = copy(basedata[14])
    mesh.totE = copy(basedata[15])
    mesh.totF = copy(basedata[16])
    mesh.totC = copy(basedata[17])
    mesh.edgeflag = copy(basedata[18])
    mesh.faceflag = copy(basedata[19])
    mesh.cellflag = copy(basedata[20])
    if 1 == mesh.D:
        c=copy(clock)
        if printflag:
            disp(strcat(cat(num2str(c[1]),'_',num2str(c[2]),'_',num2str(c[3]))))
            disp(' ')
            disp('LOAD MESH FROM .csv FILE FORMAT')
            disp(' ')
            disp('1D mesh')
            fprintf('Start point x0 = %d\\n',mesh.dim1min)
            fprintf('End point xN = %6.2f\\n',mesh.dim1max)
            disp(' ')
            fprintf('Total number of nodes N = %6.2f\\n',mesh.totN)
        mesh.nodes.id = copy(zeros(1,mesh.totN))
        mesh.nodes.meshcoordinates = copy(zeros(3,mesh.totN))
        mesh.coordlines.dim1free = copy(zeros(mesh.Nlinesdim1,3))
        R=0
        C=0
        R2=mesh.Nlinesdim1 - 1
        C2=3 - 1
        RNG=matlabarray(cat(R,C,R2,C2))
        data=csvread(linesfilename,R,C,RNG)
        mesh.coordlines.dim1free = copy(data)
        if mesh.edgeflag:
            mesh.nodesperedge = copy(2)
            mesh.edgespernode = copy(2)
            mesh.nodes.edges = copy(zeros(mesh.edgespernode,mesh.totN))
            mesh.edges.id = copy(zeros(1,mesh.totE))
            mesh.edges.centroid = copy(zeros(3,mesh.totE))
            mesh.edges.nodes = copy(zeros(mesh.nodesperedge,mesh.totE))
            for i in arange(1,mesh.totN).reshape(-1):
                R=0
                C=0
                C2=6 - 1
                RNG=matlabarray(cat(R,C,R,C2))
                data=csvread(nodesfilename,R,C,RNG)
                mesh.nodes.id[i]=data[1]
                mesh.nodes.meshcoordinates[1,i]=data[2]
                mesh.nodes.meshcoordinates[2,i]=data[3]
                mesh.nodes.meshcoordinates[3,i]=data[4]
                mesh.nodes.edges[1,i]=data[5]
                mesh.nodes.edges[2,i]=data[6]
            for i in arange(1,mesh.totE).reshape(-1):
                R=0
                C=0
                C2=6 - 1
                RNG=matlabarray(cat(R,C,R,C2))
                data=csvread(edgesfilename,R,C,RNG)
                mesh.edges.id[i]=data[1]
                mesh.edges.centroid[1,i]=data[2]
                mesh.edges.centroid[2,i]=data[3]
                mesh.edges.centroid[3,i]=data[4]
                mesh.edges.nodes[1,i]=data[5]
                mesh.edges.nodes[2,i]=data[6]
        else:
            for i in arange(1,mesh.totN).reshape(-1):
                R=0
                C=0
                C2=4 - 1
                RNG=matlabarray(cat(R,C,R,C2))
                data=csvread(nodesfilename,R,C,RNG)
                mesh.nodes.id[i]=data[1]
                mesh.nodes.meshcoordinates[1,i]=data[2]
                mesh.nodes.meshcoordinates[2,i]=data[3]
                mesh.nodes.meshcoordinates[3,i]=data[4]
        #-----------------------------------------------------------------------------2D--------------------------------------------------------------------------------------------
    else:
        if 2 == mesh.D:
            c=copy(clock)
            if printflag:
                disp(strcat(cat(num2str(c[1]),'_',num2str(c[2]),'_',num2str(c[3]))))
                disp(' ')
                disp('LOAD MESH FROM .csv FILE FORMAT')
                disp(' ')
                disp('2D mesh')
                fprintf('Lower boundary along the first direction x0 = %d\\n',mesh.dim1min)
                fprintf('Upper boundary along the first direction xN = %6.2f\\n',mesh.dim1max)
                fprintf('Lower boundary along the second direction y0 = %d\\n',mesh.dim2min)
                fprintf('Upper boundary along the second direction yN = %6.2f\\n',mesh.dim2max)
                disp(' ')
                fprintf('Total number of nodes N = %6.2f\\n',mesh.totN)
            mesh.nodes.id = copy(zeros(1,mesh.totN))
            mesh.nodes.meshcoordinates = copy(zeros(3,mesh.totN))
            mesh.coordlines.dim1free = copy(zeros(mesh.Nlinesdim1,dot(3,mesh.Ndim2)))
            mesh.coordlines.dim2free = copy(zeros(mesh.Nlinesdim2,dot(3,mesh.Ndim1)))
            R=0
            C=0
            R2=mesh.Nlinesdim1 - 1
            C2=dot(3,mesh.Ndim2) - 1
            RNG=matlabarray(cat(R,C,R2,C2))
            data=csvread(linesfilename,R,C,RNG)
            mesh.coordlines.dim1free = copy(data)
            R=mesh.Nlinesdim1 + 1 - 1
            C=0
            R2=mesh.Nlinesdim1 + mesh.Nlinesdim2 - 1
            C2=dot(3,mesh.Ndim1) - 1
            RNG=matlabarray(cat(R,C,R2,C2))
            data=csvread(linesfilename,R,C,RNG)
            mesh.coordlines.dim2free = copy(data)
            if mesh.faceflag and mesh.edgeflag:
                mesh.nodesperedge = copy(2)
                mesh.nodesperface = copy(4)
                mesh.edgespernode = copy(4)
                mesh.edgesperface = copy(4)
                mesh.facespernode = copy(4)
                mesh.facesperedge = copy(2)
                mesh.nodes.edges = copy(zeros(mesh.edgespernode,mesh.totN))
                mesh.nodes.faces = copy(zeros(mesh.facespernode,mesh.totN))
                mesh.edges.id = copy(zeros(1,mesh.totE))
                mesh.edges.centroid = copy(zeros(3,mesh.totE))
                mesh.edges.nodes = copy(zeros(mesh.nodesperedge,mesh.totE))
                mesh.edges.faces = copy(zeros(mesh.facesperedge,mesh.totE))
                mesh.faces.id = copy(zeros(1,mesh.totF))
                mesh.faces.centroid = copy(zeros(3,mesh.totF))
                mesh.faces.nodes = copy(zeros(mesh.nodesperface,mesh.totF))
                mesh.faces.edges = copy(zeros(mesh.edgesperface,mesh.totF))
                for i in arange(1,mesh.totN).reshape(-1):
                    R=0
                    C=0
                    C2=12 - 1
                    RNG=matlabarray(cat(R,C,R,C2))
                    data=csvread(nodesfilename,R,C,RNG)
                    mesh.nodes.id[i]=data[1]
                    mesh.nodes.meshcoordinates[1,i]=data[2]
                    mesh.nodes.meshcoordinates[2,i]=data[3]
                    mesh.nodes.meshcoordinates[3,i]=data[4]
                    mesh.nodes.edges[1,i]=data[5]
                    mesh.nodes.edges[2,i]=data[6]
                    mesh.nodes.edges[3,i]=data[7]
                    mesh.nodes.edges[4,i]=data[8]
                    mesh.nodes.faces[1,i]=data[9]
                    mesh.nodes.faces[2,i]=data[10]
                    mesh.nodes.faces[3,i]=data[11]
                    mesh.nodes.faces[4,i]=data[12]
                for i in arange(1,mesh.totE).reshape(-1):
                    R=0
                    C=0
                    C2=8 - 1
                    RNG=matlabarray(cat(R,C,R,C2))
                    data=csvread(edgesfilename,R,C,RNG)
                    mesh.edges.id[i]=data[1]
                    mesh.edges.centroid[1,i]=data[2]
                    mesh.edges.centroid[2,i]=data[3]
                    mesh.edges.centroid[3,i]=data[4]
                    mesh.edges.nodes[1,i]=data[5]
                    mesh.edges.nodes[2,i]=data[6]
                    mesh.edges.faces[1,i]=data[7]
                    mesh.edges.faces[2,i]=data[8]
                for i in arange(1,mesh.totF).reshape(-1):
                    R=0
                    C=0
                    C2=12 - 1
                    RNG=matlabarray(cat(R,C,R,C2))
                    data=csvread(facesfilename,R,C,RNG)
                    mesh.faces.id[i]=data[1]
                    mesh.faces.centroid[1,i]=data[2]
                    mesh.faces.centroid[2,i]=data[3]
                    mesh.faces.centroid[3,i]=data[4]
                    mesh.faces.nodes[1,i]=data[5]
                    mesh.faces.nodes[2,i]=data[6]
                    mesh.faces.nodes[3,i]=data[7]
                    mesh.faces.nodes[4,i]=data[8]
                    mesh.faces.edges[1,i]=data[9]
                    mesh.faces.edges[2,i]=data[10]
                    mesh.faces.edges[3,i]=data[11]
                    mesh.faces.edges[4,i]=data[12]
            else:
                if mesh.edgeflag:
                    mesh.nodesperedge = copy(2)
                    mesh.edgespernode = copy(4)
                    mesh.nodes.edges = copy(zeros(mesh.edgespernode,mesh.totN))
                    mesh.edges.id = copy(zeros(1,mesh.totE))
                    mesh.edges.centroid = copy(zeros(3,mesh.totE))
                    mesh.edges.nodes = copy(zeros(mesh.nodesperedge,mesh.totE))
                    for i in arange(1,mesh.totN).reshape(-1):
                        R=0
                        C=0
                        C2=8 - 1
                        RNG=matlabarray(cat(R,C,R,C2))
                        data=csvread(nodesfilename,R,C,RNG)
                        mesh.nodes.id[i]=data[1]
                        mesh.nodes.meshcoordinates[1,i]=data[2]
                        mesh.nodes.meshcoordinates[2,i]=data[3]
                        mesh.nodes.meshcoordinates[3,i]=data[4]
                        mesh.nodes.edges[1,i]=data[5]
                        mesh.nodes.edges[2,i]=data[6]
                        mesh.nodes.edges[3,i]=data[7]
                        mesh.nodes.edges[4,i]=data[8]
                    for i in arange(1,mesh.totE).reshape(-1):
                        R=0
                        C=0
                        C2=6 - 1
                        RNG=matlabarray(cat(R,C,R,C2))
                        data=csvread(edgesfilename,R,C,RNG)
                        mesh.edges.id[i]=data[1]
                        mesh.edges.centroid[1,i]=data[2]
                        mesh.edges.centroid[2,i]=data[3]
                        mesh.edges.centroid[3,i]=data[4]
                        mesh.edges.nodes[1,i]=data[5]
                        mesh.edges.nodes[2,i]=data[6]
                else:
                    for i in arange(1,mesh.totN).reshape(-1):
                        R=0
                        C=0
                        C2=4 - 1
                        RNG=matlabarray(cat(R,C,R,C2))
                        data=csvread(nodesfilename,R,C,RNG)
                        mesh.nodes.id[i]=data[1]
                        mesh.nodes.meshcoordinates[1,i]=data[2]
                        mesh.nodes.meshcoordinates[2,i]=data[3]
                        mesh.nodes.meshcoordinates[3,i]=data[4]
            #-----------------------------------------------------------------------------3D--------------------------------------------------------------------------------------------
        else:
            if 3 == mesh.D:
                c=copy(clock)
                if printflag:
                    disp(strcat(cat(num2str(c[1]),'_',num2str(c[2]),'_',num2str(c[3]))))
                    disp(' ')
                    disp('LOAD MESH FROM .csv FILE FORMAT')
                    disp(' ')
                    disp('3D mesh')
                    disp(' ')
                    fprintf('Lower boundary along the first direction x0 = %d\\n',mesh.dim1min)
                    fprintf('Upper boundary along the first direction xN = %6.2f\\n',mesh.dim1max)
                    fprintf('Lower boundary along the second direction y0 = %d\\n',mesh.dim2min)
                    fprintf('Upper boundary along the second direction yN = %6.2f\\n',mesh.dim2max)
                    fprintf('Lower boundary along the second direction z0 = %d\\n',mesh.dim3min)
                    fprintf('Upper boundary along the second direction zN = %6.2f\\n',mesh.dim3max)
                    disp(' ')
                    fprintf('Total number of nodes N = %6.2f\\n',mesh.totN)
                mesh.nodes.id = copy(zeros(1,mesh.totN))
                mesh.nodes.meshcoordinates = copy(zeros(3,mesh.totN))
                mesh.coordlines.dim1free = copy(zeros(mesh.Nlinesdim1,dot(dot(3,mesh.Ndim2),mesh.Ndim3)))
                mesh.coordlines.dim2free = copy(zeros(mesh.Nlinesdim2,dot(dot(3,mesh.Ndim1),mesh.Ndim3)))
                mesh.coordlines.dim3free = copy(zeros(mesh.Nlinesdim3,dot(dot(3,mesh.Ndim1),mesh.Ndim2)))
                R=0
                C=0
                R2=mesh.Nlinesdim1 - 1
                C2=dot(dot(3,mesh.Ndim2),mesh.Ndim3) - 1
                RNG=matlabarray(cat(R,C,R2,C2))
                data=csvread(linesfilename,R,C,RNG)
                mesh.coordlines.dim1free = copy(data)
                R=mesh.Nlinesdim1 + 1 - 1
                C=0
                R2=mesh.Nlinesdim1 + mesh.Nlinesdim2 - 1
                C2=dot(dot(3,mesh.Ndim1),mesh.Ndim3) - 1
                RNG=matlabarray(cat(R,C,R2,C2))
                data=csvread(linesfilename,R,C,RNG)
                mesh.coordlines.dim2free = copy(data)
                R=mesh.Nlinesdim1 + mesh.Nlinesdim2 + 1 - 1
                C=0
                R2=mesh.Nlinesdim1 + mesh.Nlinesdim2 + mesh.Nlinesdim3 - 1
                C2=dot(dot(3,mesh.Ndim1),mesh.Ndim2) - 1
                RNG=matlabarray(cat(R,C,R2,C2))
                data=csvread(linesfilename,R,C,RNG)
                mesh.coordlines.dim3free = copy(data)
                if mesh.cellflag and mesh.faceflag and mesh.edgeflag:
                    mesh.nodesperedge = copy(2)
                    mesh.nodesperface = copy(4)
                    mesh.nodespercell = copy(8)
                    mesh.edgespernode = copy(6)
                    mesh.edgesperface = copy(4)
                    mesh.edgespercell = copy(12)
                    mesh.facespernode = copy(12)
                    mesh.facesperedge = copy(4)
                    mesh.facespercell = copy(6)
                    mesh.cellspernode = copy(8)
                    mesh.cellsperedge = copy(4)
                    mesh.cellsperface = copy(2)
                    mesh.nodes.edges = copy(zeros(mesh.edgespernode,mesh.totN))
                    mesh.nodes.faces = copy(zeros(mesh.facespernode,mesh.totN))
                    mesh.nodes.cells = copy(zeros(mesh.cellspernode,mesh.totN))
                    mesh.edges.id = copy(zeros(1,mesh.totE))
                    mesh.edges.centroid = copy(zeros(3,mesh.totE))
                    mesh.edges.nodes = copy(zeros(mesh.nodesperedge,mesh.totE))
                    mesh.edges.faces = copy(zeros(mesh.facesperedge,mesh.totE))
                    mesh.edges.cells = copy(zeros(mesh.cellsperedge,mesh.totE))
                    mesh.faces.id = copy(zeros(1,mesh.totF))
                    mesh.faces.centroid = copy(zeros(3,mesh.totF))
                    mesh.faces.nodes = copy(zeros(mesh.nodesperface,mesh.totF))
                    mesh.faces.edges = copy(zeros(mesh.edgesperface,mesh.totF))
                    mesh.faces.cells = copy(zeros(mesh.cellsperface,mesh.totF))
                    mesh.cells.id = copy(zeros(1,mesh.totC))
                    mesh.cells.centroid = copy(zeros(3,mesh.totC))
                    mesh.cells.nodes = copy(zeros(mesh.nodespercell,mesh.totC))
                    mesh.cells.edges = copy(zeros(mesh.edgespercell,mesh.totC))
                    mesh.cells.faces = copy(zeros(mesh.facespercell,mesh.totC))
                    for i in arange(1,mesh.totN).reshape(-1):
                        R=0
                        C=0
                        C2=30 - 1
                        RNG=matlabarray(cat(R,C,R,C2))
                        data=csvread(nodesfilename,R,C,RNG)
                        mesh.nodes.id[i]=data[1]
                        mesh.nodes.meshcoordinates[1,i]=data[2]
                        mesh.nodes.meshcoordinates[2,i]=data[3]
                        mesh.nodes.meshcoordinates[3,i]=data[4]
                        mesh.nodes.edges[1,i]=data[5]
                        mesh.nodes.edges[2,i]=data[6]
                        mesh.nodes.edges[3,i]=data[7]
                        mesh.nodes.edges[4,i]=data[8]
                        mesh.nodes.edges[5,i]=data[9]
                        mesh.nodes.edges[6,i]=data[10]
                        mesh.nodes.faces[1,i]=data[11]
                        mesh.nodes.faces[2,i]=data[12]
                        mesh.nodes.faces[3,i]=data[13]
                        mesh.nodes.faces[4,i]=data[14]
                        mesh.nodes.faces[5,i]=data[15]
                        mesh.nodes.faces[6,i]=data[16]
                        mesh.nodes.faces[7,i]=data[17]
                        mesh.nodes.faces[8,i]=data[18]
                        mesh.nodes.faces[9,i]=data[19]
                        mesh.nodes.faces[10,i]=data[20]
                        mesh.nodes.faces[11,i]=data[21]
                        mesh.nodes.faces[12,i]=data[22]
                        mesh.nodes.cells[1,i]=data[23]
                        mesh.nodes.cells[2,i]=data[24]
                        mesh.nodes.cells[3,i]=data[25]
                        mesh.nodes.cells[4,i]=data[26]
                        mesh.nodes.cells[5,i]=data[27]
                        mesh.nodes.cells[6,i]=data[28]
                        mesh.nodes.cells[7,i]=data[29]
                        mesh.nodes.cells[8,i]=data[30]
                    for i in arange(1,mesh.totE).reshape(-1):
                        R=0
                        C=0
                        C2=14 - 1
                        RNG=matlabarray(cat(R,C,R,C2))
                        data=csvread(edgesfilename,R,C,RNG)
                        mesh.edges.id[i]=data[1]
                        mesh.edges.centroid[1,i]=data[2]
                        mesh.edges.centroid[2,i]=data[3]
                        mesh.edges.centroid[3,i]=data[4]
                        mesh.edges.nodes[1,i]=data[5]
                        mesh.edges.nodes[2,i]=data[6]
                        mesh.edges.faces[1,i]=data[7]
                        mesh.edges.faces[2,i]=data[8]
                        mesh.edges.faces[3,i]=data[9]
                        mesh.edges.faces[4,i]=data[10]
                        mesh.edges.cells[1,i]=data[11]
                        mesh.edges.cells[2,i]=data[12]
                        mesh.edges.cells[3,i]=data[13]
                        mesh.edges.cells[4,i]=data[14]
                    for i in arange(1,mesh.totF).reshape(-1):
                        R=0
                        C=0
                        C2=14 - 1
                        RNG=matlabarray(cat(R,C,R,C2))
                        data=csvread(facesfilename,R,C,RNG)
                        mesh.faces.id[i]=data[1]
                        mesh.faces.centroid[1,i]=data[2]
                        mesh.faces.centroid[2,i]=data[3]
                        mesh.faces.centroid[3,i]=data[4]
                        mesh.faces.nodes[1,i]=data[5]
                        mesh.faces.nodes[2,i]=data[6]
                        mesh.faces.nodes[3,i]=data[7]
                        mesh.faces.nodes[4,i]=data[8]
                        mesh.faces.edges[1,i]=data[9]
                        mesh.faces.edges[2,i]=data[10]
                        mesh.faces.edges[3,i]=data[11]
                        mesh.faces.edges[4,i]=data[12]
                        mesh.faces.cells[1,i]=data[13]
                        mesh.faces.cells[2,i]=data[14]
                    for i in arange(1,mesh.totC).reshape(-1):
                        R=0
                        C=0
                        C2=30 - 1
                        RNG=matlabarray(cat(R,C,R,C2))
                        data=csvread(cellsfilename,R,C,RNG)
                        mesh.cells.id[i]=data[1]
                        mesh.cells.centroid[1,i]=data[2]
                        mesh.cells.centroid[2,i]=data[3]
                        mesh.cells.centroid[3,i]=data[4]
                        mesh.cells.nodes[1,i]=data[5]
                        mesh.cells.nodes[2,i]=data[6]
                        mesh.cells.nodes[3,i]=data[7]
                        mesh.cells.nodes[4,i]=data[8]
                        mesh.cells.nodes[5,i]=data[9]
                        mesh.cells.nodes[6,i]=data[10]
                        mesh.cells.nodes[7,i]=data[11]
                        mesh.cells.nodes[8,i]=data[12]
                        mesh.cells.edges[1,i]=data[13]
                        mesh.cells.edges[2,i]=data[14]
                        mesh.cells.edges[3,i]=data[15]
                        mesh.cells.edges[4,i]=data[16]
                        mesh.cells.edges[5,i]=data[17]
                        mesh.cells.edges[6,i]=data[18]
                        mesh.cells.edges[7,i]=data[19]
                        mesh.cells.edges[8,i]=data[20]
                        mesh.cells.edges[9,i]=data[21]
                        mesh.cells.edges[10,i]=data[22]
                        mesh.cells.edges[11,i]=data[23]
                        mesh.cells.edges[12,i]=data[24]
                        mesh.cells.faces[1,i]=data[25]
                        mesh.cells.faces[2,i]=data[26]
                        mesh.cells.faces[3,i]=data[27]
                        mesh.cells.faces[4,i]=data[28]
                        mesh.cells.faces[5,i]=data[29]
                        mesh.cells.faces[6,i]=data[30]
                else:
                    if mesh.faceflag and mesh.edgeflag:
                        mesh.nodesperedge = copy(2)
                        mesh.nodesperface = copy(4)
                        mesh.edgespernode = copy(6)
                        mesh.edgesperface = copy(4)
                        mesh.facespernode = copy(12)
                        mesh.facesperedge = copy(4)
                        mesh.nodes.edges = copy(zeros(mesh.edgespernode,mesh.totN))
                        mesh.nodes.faces = copy(zeros(mesh.facespernode,mesh.totN))
                        mesh.edges.id = copy(zeros(1,mesh.totE))
                        mesh.edges.centroid = copy(zeros(3,mesh.totE))
                        mesh.edges.nodes = copy(zeros(mesh.nodesperedge,mesh.totE))
                        mesh.edges.faces = copy(zeros(mesh.facesperedge,mesh.totE))
                        mesh.faces.id = copy(zeros(1,mesh.totF))
                        mesh.faces.centroid = copy(zeros(3,mesh.totF))
                        mesh.faces.nodes = copy(zeros(mesh.nodesperface,mesh.totF))
                        mesh.faces.edges = copy(zeros(mesh.edgesperface,mesh.totF))
                        for i in arange(1,mesh.totN).reshape(-1):
                            R=0
                            C=0
                            C2=22 - 1
                            RNG=matlabarray(cat(R,C,R,C2))
                            data=csvread(nodesfilename,R,C,RNG)
                            mesh.nodes.id[i]=data[1]
                            mesh.nodes.meshcoordinates[1,i]=data[2]
                            mesh.nodes.meshcoordinates[2,i]=data[3]
                            mesh.nodes.meshcoordinates[3,i]=data[4]
                            mesh.nodes.edges[1,i]=data[5]
                            mesh.nodes.edges[2,i]=data[6]
                            mesh.nodes.edges[3,i]=data[7]
                            mesh.nodes.edges[4,i]=data[8]
                            mesh.nodes.edges[5,i]=data[9]
                            mesh.nodes.edges[6,i]=data[10]
                            mesh.nodes.faces[1,i]=data[11]
                            mesh.nodes.faces[2,i]=data[12]
                            mesh.nodes.faces[3,i]=data[13]
                            mesh.nodes.faces[4,i]=data[14]
                            mesh.nodes.faces[5,i]=data[15]
                            mesh.nodes.faces[6,i]=data[16]
                            mesh.nodes.faces[7,i]=data[17]
                            mesh.nodes.faces[8,i]=data[18]
                            mesh.nodes.faces[9,i]=data[19]
                            mesh.nodes.faces[10,i]=data[20]
                            mesh.nodes.faces[11,i]=data[21]
                            mesh.nodes.faces[12,i]=data[22]
                        for i in arange(1,mesh.totE).reshape(-1):
                            R=0
                            C=0
                            C2=10 - 1
                            RNG=matlabarray(cat(R,C,R,C2))
                            data=csvread(edgesfilename,R,C,RNG)
                            mesh.edges.id[i]=data[1]
                            mesh.edges.centroid[1,i]=data[2]
                            mesh.edges.centroid[2,i]=data[3]
                            mesh.edges.centroid[3,i]=data[4]
                            mesh.edges.nodes[1,i]=data[5]
                            mesh.edges.nodes[2,i]=data[6]
                            mesh.edges.faces[1,i]=data[7]
                            mesh.edges.faces[2,i]=data[8]
                            mesh.edges.faces[3,i]=data[9]
                            mesh.edges.faces[4,i]=data[10]
                        for i in arange(1,mesh.totF).reshape(-1):
                            R=0
                            C=0
                            C2=12 - 1
                            RNG=matlabarray(cat(R,C,R,C2))
                            data=csvread(facesfilename,R,C,RNG)
                            mesh.faces.id[i]=data[1]
                            mesh.faces.centroid[1,i]=data[2]
                            mesh.faces.centroid[2,i]=data[3]
                            mesh.faces.centroid[3,i]=data[4]
                            mesh.faces.nodes[1,i]=data[5]
                            mesh.faces.nodes[2,i]=data[6]
                            mesh.faces.nodes[3,i]=data[7]
                            mesh.faces.nodes[4,i]=data[8]
                            mesh.faces.edges[1,i]=data[9]
                            mesh.faces.edges[2,i]=data[10]
                            mesh.faces.edges[3,i]=data[11]
                            mesh.faces.edges[4,i]=data[12]
                    else:
                        if mesh.edgeflag:
                            mesh.nodesperedge = copy(2)
                            mesh.edgespernode = copy(6)
                            mesh.nodes.edges = copy(zeros(mesh.edgespernode,mesh.totN))
                            mesh.edges.id = copy(zeros(1,mesh.totE))
                            mesh.edges.centroid = copy(zeros(3,mesh.totE))
                            mesh.edges.nodes = copy(zeros(mesh.nodesperedge,mesh.totE))
                            for i in arange(1,mesh.totN).reshape(-1):
                                R=0
                                C=0
                                C2=10 - 1
                                RNG=matlabarray(cat(R,C,R,C2))
                                data=csvread(nodesfilename,R,C,RNG)
                                mesh.nodes.id[i]=data[1]
                                mesh.nodes.meshcoordinates[1,i]=data[2]
                                mesh.nodes.meshcoordinates[2,i]=data[3]
                                mesh.nodes.meshcoordinates[3,i]=data[4]
                                mesh.nodes.edges[1,i]=data[5]
                                mesh.nodes.edges[2,i]=data[6]
                                mesh.nodes.edges[3,i]=data[7]
                                mesh.nodes.edges[4,i]=data[8]
                                mesh.nodes.edges[5,i]=data[9]
                                mesh.nodes.edges[6,i]=data[10]
                            for i in arange(1,mesh.totE).reshape(-1):
                                R=0
                                C=0
                                C2=6 - 1
                                RNG=matlabarray(cat(R,C,R,C2))
                                data=csvread(edgesfilename,R,C,RNG)
                                mesh.edges.id[i]=data[1]
                                mesh.edges.centroid[1,i]=data[2]
                                mesh.edges.centroid[2,i]=data[3]
                                mesh.edges.centroid[3,i]=data[4]
                                mesh.edges.nodes[1,i]=data[5]
                                mesh.edges.nodes[2,i]=data[6]
                        else:
                            for i in arange(1,mesh.totN).reshape(-1):
                                R=0
                                C=0
                                C2=4 - 1
                                RNG=matlabarray(cat(R,C,R,C2))
                                data=csvread(nodesfilename,R,C,RNG)
                                mesh.nodes.id[i]=data[1]
                                mesh.nodes.meshcoordinates[1,i]=data[2]
                                mesh.nodes.meshcoordinates[2,i]=data[3]
                                mesh.nodes.meshcoordinates[3,i]=data[4]
    
    return mesh