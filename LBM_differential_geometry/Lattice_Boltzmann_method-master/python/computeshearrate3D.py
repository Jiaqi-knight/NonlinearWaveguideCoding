# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def computeshearrate3D(S=None,*args,**kwargs):
    varargin = computeshearrate3D.varargin
    nargin = computeshearrate3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: May 30th, 2014
#    Last update: June 24th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    S11=S[:,1]
    S22=S[:,2]
    S33=S[:,3]
    S12=S[:,4]
    S13=S[:,5]
    S23=S[:,6]
    gamma=sqrt(dot(2.0,(multiply(S11,S11) + multiply(S22,S22) + multiply(S33,S33) + multiply(dot(2.0,S12),S12) + multiply(dot(2.0,S13),S13) + multiply(dot(2.0,S23),S23))))
    return gamma
    
if __name__ == '__main__':
    pass
    