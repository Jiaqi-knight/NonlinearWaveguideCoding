# Autogenerated with SMOP 
from smop.core import *
# 

    
@function
def computevelocity3D(N=None,Q=None,rho=None,f=None,scheme=None,*args,**kwargs):
    varargin = computevelocity3D.varargin
    nargin = computevelocity3D.nargin

    ##
#        Project: Fluid - structure interaction on deformable surfaces
#         Author: Luca Di Stasio
#    Institution: ETH Zrich
#                 Institute for Building Materials
# Research group: Computational Physics for Engineering Materials
#        Version: 0.1
#  Creation date: May 30th, 2014
#    Last update: June 24th, 2014
    
    #    Description: 
#          Input: 
#         Output:
    
    ##
    
    u=zeros(N,3)
    for i in arange(1,Q).reshape(-1):
        u[:,1]=u[:,1] + multiply(f[:,i],scheme[i,1])
        u[:,2]=u[:,2] + multiply(f[:,i],scheme[i,2])
        u[:,3]=u[:,3] + multiply(f[:,i],scheme[i,3])
    
    u[:,1]=u[:,1] / rho
    u[:,2]=u[:,2] / rho
    u[:,3]=u[:,3] / rho
    return u